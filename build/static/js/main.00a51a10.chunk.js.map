{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","Addtask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","AddTask","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00a51a10.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => { \n    return (\n    <button onClick={onClick} style={{ backgroundColor: color}} \n    className='btn'>{text}</button>)\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n         //add className to align side by side \n        <header className='header'>\n            <h1>{title}</h1>\n            <Button \n                color={showAdd ? 'red' : 'green'} \n                text={showAdd ? 'Close' : 'Add'} \n                onClick={onAdd} \n            />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n// optional CSS in JS\n//const headingStyle = {\n//    color: 'red', \n//    backgroundColor: 'black'\n//}\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\n\n\n// FaTimes is delete 'x'\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {task.text} <FaTimes style={{ \n                    color: 'red', \n                    cursor: 'pointer'}} \n                    onClick={() => onDelete(task.id)} />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n        {tasks.map((task) => (\n        <Task key={task.id} task={task}\n        onDelete={onDelete}\n        onToggle={onToggle} />\n        ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst Addtask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n    const onSubmit = (e) => {\n        e.preventDefault()\n       \n        // input validation for no input \n        if (!text) {\n            alert('Please add task')\n            return\n        }\n        onAdd({ text, day, reminder })\n        \n        // clear the form \n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n    \n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n               <label>Task</label>\n               <input type='text' placeholder='Add Task' \n               value={text} \n               onChange={(e) => setText(e.target.value)}\n               />\n            </div>\n            <div className='form-control'>\n               <label>Day & Time </label>\n               <input type='text' placeholder='Add Day & Time'\n                value={day} \n                onChange={(e) => setDay(e.target.value)}\n               />\n            </div>\n            <div className='form-control form-control-check'>\n               <label>Set Reminder</label>\n               <input \n                type='checkbox' \n                checked={reminder}\n                value={reminder} \n                onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default Addtask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Dr. Apt',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Mtg at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true, \n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false, \n    }\n])\n\n/* Add Task \n* Takes in task info: text, day and reminder state\n* Show task ids that do not match the deleted task id\n* Actaul button located in Task.js \n*/\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 1000 + 1)\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n\n/* Delete Task \n* Takes in: task id \n* Show task ids that do not match the deleted task id\n* Actaul button located in Task.js \n*/\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n\n/* DToggle Reminder \n* Takes in: task id \n* Sets the Reminderto the opposite of what is currently is\n* Actaul button (x2 click) located in Task.js \n*/\nconst toggleReminder = (id) => {\n  //console.log(id) for testing \n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder } : task))\n\n}\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : \n      ('No Tasks To Show')}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}